# Generated by Selenium IDE
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys

class TestInserirArtigo():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_inserirArtigo(self):
    # Test name: Inserir Artigo
    # Step # | name | target | value | comment
    # 1 | open | http://127.0.0.1:8000/admin/ |  | 
    self.driver.get("http://127.0.0.1:8000/admin/")
    self.driver.find_element(By.ID, "id_username").send_keys("adia");
    self.driver.find_element(By.ID, "id_password").send_keys("Adila123");
    self.driver.find_element_by_class_name("submit-row").click();
    # 2 | setWindowSize | 675x605 |  | 
    self.driver.set_window_size(675, 605)
    # 3 | click | linkText=Articles |  | 
    self.driver.find_element(By.LINK_TEXT, "Articles").click()
    # 4 | click | css=.addlink |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".addlink").click()
    # 5 | type | id=id_author | Mona Rahimi ; Mehdi Mirakhorli ; Jane Cleland-Huang | 
    self.driver.find_element(By.ID, "id_author").send_keys("Mona Rahimi ; Mehdi Mirakhorli ; Jane Cleland-Huang")
    # 6 | type | id=id_title | Automated extraction and visualization of quality concerns from requirements specifications | 
    self.driver.find_element(By.ID, "id_title").send_keys("Automated extraction and visualization of quality concerns from requirements specifications")
    # 7 | type | id=id_doi | 10.1109/RE.2014.6912267 | 
    self.driver.find_element(By.ID, "id_doi").send_keys("10.1109/RE.2014.6912267")
    # 8 | type | id=id_text | Software requirements specifications often focus on functionality and fail to adequately capture quality concerns such as security, performance, and usability. | 
    self.driver.find_element(By.ID, "id_text").send_keys("Software requirements specifications often focus on functionality and fail to adequately capture quality concerns such as security, performance, and usability.")
    # 9 | type | id=id_published_date | 2014 | 
    self.driver.find_element(By.ID, "id_published_date").send_keys("2014")
    # 10 | addSelection | id=id_categories | label=FLOW | 
    dropdown = self.driver.find_element(By.ID, "id_categories")
    dropdown.find_element(By.XPATH, "//option[. = 'FLOW']").click()
    # 11 | addSelection | id=id_tasks | label=LABELED | 
    dropdown = self.driver.find_element(By.ID, "id_tasks")
    dropdown.find_element(By.XPATH, "//option[. = 'LABELED']").click()
    # 12 | addSelection | id=id_tasks | label=CLUSTERING | 
    dropdown = self.driver.find_element(By.ID, "id_tasks")
    dropdown.find_element(By.XPATH, "//option[. = 'CLUSTERING']").click()
    # 13 | addSelection | id=id_tasks | label=HIGHTLIGHT | 
    dropdown = self.driver.find_element(By.ID, "id_tasks")
    dropdown.find_element(By.XPATH, "//option[. = 'HIGHTLIGHT']").click()
    # 14 | click | id=id_image |  | 
    self.driver.find_element(By.ID, "id_image").click()
    # 15 | select | id=id_image | label=images/Automated_extraction_and_visualization_of_quality_concerns_xjo7JaT.jpg | 
    dropdown = self.driver.find_element(By.ID, "id_image")
    dropdown.find_element(By.XPATH, "//option[. = 'images/Automated_extraction_and_visualization_of_quality_concerns_xjo7JaT.jpg']").click()
    # 16 | click | css=option:nth-child(9) |  | 
    self.driver.find_element(By.CSS_SELECTOR, "option:nth-child(9)").click()
    # 17 | click | name=_save |  | 
    self.driver.find_element(By.NAME, "_save").click()
    # 18 | click | css=#user-tools > a:nth-child(2) |  | 
    self.driver.find_element(By.CSS_SELECTOR, "#user-tools > a:nth-child(2)").click()
  
